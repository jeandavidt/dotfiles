
# Place a copy of this config to ~/.aerospace.toml
# After that, you can edit ~/.aerospace.toml to your liking

# It's not necessary to copy all keys to your config.
# If the key is missing in your config, "default-config.toml" will serve as a fallback

# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands

#after-startup-command = [
#  'exec-and-forget borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0',
#]


# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 60

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
key-mapping.preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 10
inner.vertical = 10
outer.left = 10
outer.bottom = 10
outer.top = 10
outer.right = 10

# See https://nikitabobko.github.io/AeroSpace/guide#exec-env-vars
[exec] # Again, you don't need to copy all config sections to your config.
inherit-env-vars = true # If you don't touch "exec" section,
[exec.env-vars] # it will fallback to "default-config.toml"
PATH = '/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}'

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
[mode.main.binding]

# All possible keys:
# - Letters.        a, b, c, ..., z
# - Numbers.        0, 1, 2, ..., 9
# - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - F-keys.         f1, f2, ..., f20
# - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftSquareBracket, rightSquareBracket, space, enter, esc, backspace, tab
# - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
#                   keypadMinus, keypadMultiply, keypadPlus
# - Arrows.         left, down, up, right

# All possible modifiers: cmd, alt, ctrl, shift

# All possible commands: https://nikitabobko.github.io/AeroSpace/commands

# You can uncomment this line to open up terminal with alt + enter shortcut
# See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
# alt-enter = 'exec-and-forget open -n /System/Applications/Utilities/Terminal.app'

# See: https://nikitabobko.github.io/AeroSpace/commands#layout
ctrl-slash = 'layout tiles horizontal vertical'
ctrl-comma = 'layout accordion horizontal vertical'

# See: https://nikitabobko.github.io/AeroSpace/commands#focus
alt-h = 'focus left'
alt-j = 'focus down'
alt-k = 'focus up'
alt-l = 'focus right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move
alt-shift-h = 'move left'
alt-shift-j = 'move down'
alt-shift-k = 'move up'
alt-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#resize
alt-ctrl-minus = 'resize smart -50'
alt-ctrl-equal = 'resize smart +50'

# See: https://nikitabobko.github.io/AeroSpace/commands#workspace
alt-a = 'workspace A' # In your config, you can drop workspace bindings that you don't need
alt-b = 'workspace B'
alt-c = 'workspace C'
alt-d = 'workspace D'
alt-e = 'workspace E'
alt-f = 'workspace F'
alt-g = 'workspace G'
alt-i = 'workspace I'
alt-m = 'workspace M'
alt-n = 'workspace N'
alt-o = 'workspace O'
alt-p = 'workspace P'
alt-q = 'workspace Q'
alt-r = 'workspace R'
alt-s = 'workspace S'
alt-t = 'workspace T'
alt-u = 'workspace U'
alt-v = 'workspace V'
alt-w = 'workspace W'
alt-x = 'workspace X'
alt-y = 'workspace Y'
alt-z = 'workspace Z'
alt-0 = 'workspace 0'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
alt-shift-a = ['move-node-to-workspace A', 'workspace A']
alt-shift-b = ['move-node-to-workspace B', 'workspace B']
alt-shift-c = ['move-node-to-workspace C', 'workspace C']
alt-shift-d = ['move-node-to-workspace D', 'workspace D']
alt-shift-e = ['move-node-to-workspace E', 'workspace E']
alt-shift-f = ['move-node-to-workspace F', 'workspace F']
alt-shift-g = ['move-node-to-workspace G', 'workspace G']
alt-shift-i = ['move-node-to-workspace I', 'workspace I']
alt-shift-m = ['move-node-to-workspace M', 'workspace M']
alt-shift-n = ['move-node-to-workspace N', 'workspace N']
alt-shift-o = ['move-node-to-workspace O', 'workspace O']
alt-shift-p = ['move-node-to-workspace P', 'workspace P']
alt-shift-q = ['move-node-to-workspace Q', 'workspace Q']
alt-shift-r = ['move-node-to-workspace R', 'workspace R']
alt-shift-s = ['move-node-to-workspace S', 'workspace S']
alt-shift-t = ['move-node-to-workspace T', 'workspace T']
alt-shift-u = ['move-node-to-workspace U', 'workspace U']
alt-shift-v = ['move-node-to-workspace V', 'workspace V']
alt-shift-w = ['move-node-to-workspace W', 'workspace W']
alt-shift-x = ['move-node-to-workspace X', 'workspace X']
alt-shift-y = ['move-node-to-workspace Y', 'workspace Y']
alt-shift-z = ['move-node-to-workspace Z', 'workspace Z']
alt-shift-0 = ['move-node-to-workspace 0', 'workspace 0']
# Move window to next/previous monitor
alt-shift-period = 'move-node-to-monitor --wrap-around next'
alt-shift-comma = 'move-node-to-monitor --wrap-around prev'
# Move window to specific monitor (if you know your monitor arrangement)
alt-shift-1 = 'move-node-to-monitor 1'
alt-shift-2 = 'move-node-to-monitor 2'
# Move focus to next/previous monitor (same workspace)
alt-ctrl-h = 'focus-monitor --wrap-around prev'
alt-ctrl-l = 'focus-monitor --wrap-around next'
# See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
alt-tab = 'workspace-back-and-forth'
# See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'

# See: https://nikitabobko.github.io/AeroSpace/commands#mode
alt-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
esc = ['reload-config', 'mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
#s = ['layout sticky tiling', 'mode main'] # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']

alt-shift-h = ['join-with left', 'mode main']
alt-shift-j = ['join-with down', 'mode main']
alt-shift-k = ['join-with up', 'mode main']
alt-shift-l = ['join-with right', 'mode main']

# B for Browser
[[on-window-detected]]
if.app-id = 'com.apple.Safari'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = "move-node-to-workspace B"


[[on-window-detected]]
if.app-id = 'com.kagi.kagimacOS'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'company.thebrowser.Browser'
run = "move-node-to-workspace B"

# Z for Zotero (for reading / references)
[[on-window-detected]]
if.app-id = 'org.zotero.zotero'
run = "move-node-to-workspace Z"

[[on-window-detected]]
if.app-id = 'com.amazon.Lassen'
run = "move-node-to-workspace Z"

[[on-window-detected]]
if.app-id = 'com.ranchero.NetNewsWire-Evergreen'
run = "move-node-to-workspace V"

# W for Windows
[[on-window-detected]]
if.app-id = 'com.microsoft.rdc.macos'
run = "move-node-to-workspace W"

# A for AI
[[on-window-detected]]
if.app-id = 'com.openai.chat'
run = "move-node-to-workspace A"

[[on-window-detected]]
if.app-id = 'com.anthropic.claudefordesktop'
run = "move-node-to-workspace A"

# R for Remote meeting
[[on-window-detected]]
if.app-id = 'us.zoom.xos'
run = "move-node-to-workspace R"

[[on-window-detected]]
if.app-id = 'com.microsoft.teams2'
run = "move-node-to-workspace R"

# E for Email
[[on-window-detected]]
if.app-id = 'com.apple.mail'
run = "move-node-to-workspace E"

# T for Terminal
[[on-window-detected]]
if.app-id = 'com.github.wez.wezterm'
run = "move-node-to-workspace T"

# M for Music
[[on-window-detected]]
if.app-id = 'com.apple.Music'
run = "move-node-to-workspace M"

[[on-window-detected]]
if.app-id = 'com.spotify.client'
run = "move-node-to-workspace M"


# N for Notes
[[on-window-detected]]
if.app-id = 'notion.id'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'md.obsidian'
run = "move-node-to-workspace N"

[[on-window-detected]]
if.app-id = 'com.bloombuilt.dayone-mac'
run = "move-node-to-workspace N"

# I for IDE
[[on-window-detected]]
if.app-id = 'com.microsoft.VSCode'
run = "move-node-to-workspace I"

# C for Calendar
[[on-window-detected]]
if.app-id = 'com.apple.iCal'
run = "move-node-to-workspace C"

[[on-window-detected]]
if.app-id = 'com.cron.electron'
run = "move-node-to-workspace C"

# F for Finder
[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = "move-node-to-workspace F"

# D for Documents
[[on-window-detected]]
if.app-id = 'com.apple.Preview'
run = "move-node-to-workspace D"

[[on-window-detected]]
if.app-id = 'com.microsoft.Word'
run = "move-node-to-workspace D"

# P for PowerPoint (or Presentation)
[[on-window-detected]]
if.app-id = 'com.microsoft.Powerpoint'
run = "move-node-to-workspace P"

# X for (e)xcel
[[on-window-detected]]
if.app-id = 'com.microsoft.Excel'
run = "move-node-to-workspace X"

# S for Slack (chat)
[[on-window-detected]]
if.app-id = 'com.tinyspeck.slackmacgap'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'com.facebook.archon'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'com.apple.MobileSMS'
run = "move-node-to-workspace S"

[[on-window-detected]]
if.app-id = 'org.whispersystems.signal-desktop'
run = "move-node-to-workspace S"
# W for weather com.apple.weather
[[on-window-detected]]
if.app-id = 'com.apple.weather'
run = "move-node-to-workspace W"
# Y for Yay, photos!
[[on-window-detected]]
if.app-id = 'com.apple.Photos'
run = "move-node-to-workspace Y"

[[on-window-detected]]
if.app-id = 'com.adobe.mas.lightroomCC'
run = "move-node-to-workspace Y"

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinitypublisher2'
run = "move-node-to-workspace Y"

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinitydesigner2'
run = "move-node-to-workspace Y"

[[on-window-detected]]
if.app-id = 'com.seriflabs.affinityphoto2'
run = "move-node-to-workspace Y"

[[on-window-detected]]
if.app-id = 'app.zen-browser.zen'
run = "move-node-to-workspace B"

[[on-window-detected]]
if.app-id = 'edu.stanford.protege'
run = 'move-node-to-workspace O'

[[on-window-detected]]
if.app-id = 'com.courtneycircle.MeditationMobile'
run = 'move-node-to-workspace 0'

[[on-window-detected]]
if.app-id = 'com.apple.iBooksX'
run = 'move-node-to-workspace V'
